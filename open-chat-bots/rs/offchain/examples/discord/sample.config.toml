[discord]
# This token is used to authenticate the bot with the Discord API. Probably best
# not to commit to version control!
token = "your-discord-app-token"

[openchat]
# [optional]
# This is the root host of the internet computer for the environment where
# you are operating. Again this only varies by the target IC environment.
# If not specified the mainnet IC url will be used.
ic_url = "http://localhost:8080"

# [optional]
# Public pair of the key used by OpenChat to sign the issued JWT. This value
# can be obtained from the OC UI, by visiting User Profile -> Advanced, and
# then clicking on the "Bot client config" button.
# If not specified the mainnet OC public key will be used.
public_key = "openchat-publick-key-used-to-sign-jwt"

[openchat.bot]
# Used for the OC bot to expose its schema, and any available commands.
port = 13456

# Private key for the bot, used for bot identification when bots are used
# off-chain. On chain bots would get their principal from the OC during registration.
# Private pem key can be generated for a bot by running:
#
#```
# openssl ecparam -genkey -name secp256k1 -out private_key.pem
#```
private_key_path = "./private_key.pem"

[system]
# [optional]
# You may save your current bot state to disk into a file. Persistent parts of
# the state will be serialised using serde, and saved within a file on the fs.
# Naming of the file, and its extension (or none), is arbitrary.
# Note: If store path is not provided state will not be saved!
store_path = "path/to/store/on/disk.db"

# [optional]
# Key used to encrypt the state of the bot when saved to a file. State will
# contain OC API keys that could be considered a sensitive information, and
# therefore may benefit from encryption.
# Note: If not provided, state will not be encrypted when saved to file.
store_encryption_key = "key-must-be-32-bit-value-to-work"

# Set the appropriate log level you'd like to record. Logs are recorded by the
# `tracing` crate. Alowed values: trace, debug, info, warn, error.
log_level = "info"
